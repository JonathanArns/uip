from keras.models import load_model
from tensorflow.keras.models import load_model
import numpy as np




a = np.array([[ 0.62768387,  0.09062461, -0.30739122 , 0.9228323,  -0.13020111,
   -0.78076888, -0.02864555,  1.11038965, -0.36652838 , 0.15390567,
    1.02608347],

 [-0.70591767,  0.62768387 , 0.09062461 ,-0.30739122 , 0.9228323,
   -0.13020111, -0.78076888,  0.02496819 , 1.11038965 ,-0.36652838,
    0.1689546 ],

 [ 1.33934461, -0.70591767 , 0.62768387 , 0.09062461 ,-0.30739122,
    0.9228323 , -0.13020111 ,-0.76866845 , 0.02496819  ,1.11038965,
   -0.35826682],

 [-0.15649743 , 1.33934461 ,-0.70591767,  0.62768387,  0.09062461,
   -0.30739122 , 0.9228323 , -0.08219271 ,-0.76866845 , 0.02496819,
    1.13791279],

 [ 0.07871758, -0.15649743 , 1.33934461, -0.70591767 , 0.62768387,
    0.09062461, -0.30739122,  1.0289627 , -0.08219271, -0.76866845,
    0.03833555],

 [ 0.91238719 , 0.07871758, -0.15649743 , 1.33934461 ,-0.70591767,
    0.62768387 , 0.09062461 ,-0.2691628 ,  1.0289627 , -0.08219271,
   -0.76565149]
   ])

a = a.reshape(a.shape[0], 1, a.shape[1]) 

model = load_model('/Users/konstantingasser/workspaces/vs_code-workspace/uip_sap/project_sourceCode/uip-infrastructure/LSTM_KERAS_MODEL.h5')
model.compile(
        loss='mean_squared_error',
        optimizer='adam'
    )
# print(model.summary())
res = model.predict(a)
print(res)